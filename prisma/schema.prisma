datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// User Model (Clerk will handle most authentication details)
model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  clerkUserId      String    @unique // Clerk's user identifier
  email            String    @unique
  firstName        String?
  lastName         String?
  profilePicture   String?
  dateOfBirth      DateTime?
  
  // Address Details
  address          Address?
  
  // Relationships
  orders           Order[]
  reviews          Review[]
  
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

// Address Embedded Model
type Address {
  street           String?
  city             String?
  state            String?
  country          String?
  zipCode          String?
  pinCode          String?
}

// Product Model (Unchanged)
model Product {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  description      String
  price            Float
  originalPrice    Float?
  category         String
  stock            Int
  
  // Product Variants
  sizes            String[]
  colors           String[]
  
  // Special Categories
  isBestseller     Boolean   @default(false)
  isNewLaunch      Boolean   @default(false)
  
  // Media
  images           String[]
  
  // Relationships
  reviews          Review[]
  orderItems       OrderItem[]
  
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

// Order Model (Unchanged)
model Order {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  user             User      @relation(fields: [userId], references: [id])
  userId           String    @db.ObjectId
  
  // Order Details
  total            Float
  status           OrderStatus @default(PENDING)
  paymentMethod    PaymentMethod
  
  // Razorpay Integration
  razorpayOrderId  String?
  razorpayPaymentId String?
  
  // Shipping Details
  shippingAddress  Address?
  
  // Relationships
  orderItems       OrderItem[]
  
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

// Order Item Model (Unchanged)
model OrderItem {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  order            Order     @relation(fields: [orderId], references: [id])
  orderId          String    @db.ObjectId
  product          Product   @relation(fields: [productId], references: [id])
  productId        String    @db.ObjectId
  
  quantity         Int
  price            Float
  
  createdAt        DateTime  @default(now())
}

// Review Model (Unchanged)
model Review {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  user             User      @relation(fields: [userId], references: [id])
  userId           String    @db.ObjectId
  product          Product   @relation(fields: [productId], references: [id])
  productId        String    @db.ObjectId
  
  rating           Int
  comment          String?
  
  createdAt        DateTime  @default(now())
}

// Coupon Model (Unchanged)
model Coupon {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  code             String    @unique
  discountType     DiscountType
  discountValue    Float
  minPurchaseAmount Float?
  maxDiscountAmount Float?
  
  startDate        DateTime?
  expiryDate       DateTime?
  
  isActive         Boolean   @default(true)
  
  createdAt        DateTime  @default(now())
}

// Admin Model (Simplified for Role Management)
model Admin {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  clerkUserId      String    @unique // Link to Clerk for admin users
  email            String    @unique
  role             AdminRole
  
  permissions      Permission[]
  
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

// Enums (Unchanged)
enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentMethod {
  RAZORPAY
  COD
  CREDIT_CARD
  DEBIT_CARD
}

enum DiscountType {
  PERCENTAGE
  FIXED_AMOUNT
}

enum AdminRole {
  SUPER_ADMIN
  PRODUCT_MANAGER
  SALES_MANAGER
  VIEWER
}

enum Permission {
  VIEW_PRODUCTS
  MANAGE_PRODUCTS
  VIEW_ORDERS
  MANAGE_ORDERS
  VIEW_USERS
  MANAGE_USERS
  VIEW_DASHBOARD
}